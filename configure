#!/bin/bash

function echoconf_mac {
	cat << EOF
SRC+=src/osx-audio.c
CFLAGS+=`pkg-config --cflags libevent`
LDFLAGS+=-framework libspotify -levent -levent_pthreads -framework AudioToolbox
EOF
}

function echoconf_desktoplinux {
	cat << EOF
SRC+=src/alsa-audio.c
CFLAGS+=`pkg-config --cflags libevent libevent_pthreads libspotify alsa`
LDFLAGS+=`pkg-config --libs libevent libevent_pthreads libspotify alsa`
EOF
}

function echoconf_beaglebone {
	cat << EOF
SRC+=src/alsa-audio.c
CFLAGS+=`PKG_CONFIG_PATH=/usr/local/lib/ pkg-config --cflags libevent libevent_pthreads libspotify alsa`
LDFLAGS+=`PKG_CONFIG_PATH=/usr/local/lib/ pkg-config --libs libevent libevent_pthreads libspotify alsa`
EOF
}

function echoconf_chumby {
	cat << EOF
SRC+=src/alsa-audio.c
CFLAGS=-I/home/pierre/work/perso/noisebox/chumby-buildroot/usr/local/include
LDFLAGS=-L/home/pierre/work/perso/noisebox/chumby-buildroot/usr/local/lib -lspotify -levent -levent_pthreads -lasound
EOF
}


function detect_platform {
	while true ; do
		UNAME="$(uname)"
		 [ "${UNAME}" = "Darwin" ] && { export PLATFORM=mac ; break ; }
		PROC="$(uname -p)"
		[ "${PROC}" = "x86_64" ] && { export PLATFORM=desktoplinux ; break ; }
		HOSTNAME="$(uname -h)"
		[ "${HOSTNAME}" = "beaglebone" ] && { export PLATFORM=beaglebone ; break ; }
		PLATFORM=chumny
	done
	echo "Detected platform: " ${PLATFORM}
	export PLATFORM
}

detect_platform || exit 1
echoconf_$PLATFORM > config.mk

